@model RecipeViewModel;

@{
    ViewData["Title"] = "Add Recipe";
}

<div class="text-center">
    <h1 class="h1">Add new Recipe</h1>
</div>

<form class="row" asp-controller="Home" asp-action="AddRecipe" method="post" enctype="multipart/form-data">
    <div class="row pb-4">
        <div class="d-inline">
            <h3 class="h3 d-inline">Details</h3>
            <div class="float-end d-inline">
                <input id="btnSubmit" type="submit" class="btn btn-secondary" />
            </div>
        </div>
        <hr />
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Title, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Title, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Image)
            @Html.TextBoxFor(m => m.RecipeDetails.Image, new { @class = "form-control", type = "file" })
        </div>
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Description, new { @class = "form-label" })
            @Html.TextAreaFor(m => m.RecipeDetails.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Description, "", htmlAttributes: new { @class =
            "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.PrepMins, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.PrepMins, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.PrepMins, "", htmlAttributes: new { @class = "text-danger"
                        })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.CookMins, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.CookMins, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.CookMins, "", htmlAttributes: new { @class = "text-danger"
                        })

        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.Servings, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Servings, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Servings, "", htmlAttributes: new { @class = "text-danger"
                        })

        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.Tags, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Tags, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Tags, "", htmlAttributes: new { @class = "text-danger" })
        </div>
    </div>
    <div class="row pb-4">
        <hr />
        <h3 class="h3">@Html.DisplayNameFor(m => m.Ingredients)</h3>
        <h6 class="h6">*Add each ingredient on a newline bullet points will be auto added*</h6>
        <hr />
        @Html.TextAreaFor(m => m.Ingredients, new { @class = "form-control", style = "height: 300px" })
        @Html.ValidationMessageFor(m => m.Ingredients, "", htmlAttributes: new { @class = "text-danger" })
    </div>
    <div class="row">
        <hr />
        <h3 class="h3">@Html.DisplayNameFor(m => m.Instructions)</h3>
        <h6 class="h6">*Add each step on a newline they will be auto numbered*</h6>
        <hr />
        @Html.TextAreaFor(m => m.Instructions, new { @class = "form-control", style = "height: 300px" })
        @Html.ValidationMessageFor(m => m.Instructions, "", htmlAttributes: new { @class = "text-danger" })
    </div>
</form>