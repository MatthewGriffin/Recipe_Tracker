@model RecipeViewModel;

@{
    ViewData["Title"] = "Add Recipe";
}

<div class="text-center">
    <h1 class="h1">Add new Recipe</h1>
</div>

<form class="row" asp-controller="Home" asp-action="AddRecipe" method="post" enctype="multipart/form-data">
    <div class="row pb-4">
        <div class="d-inline">
            <h3 class="h3 d-inline">Details</h3>
            <div class="float-end d-inline">
                <input id="btnSubmit" type="submit" class="btn btn-secondary"/>
            </div>
        </div>
        <hr/>
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Title, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Title, "", htmlAttributes: new { @class = "text-danger" })
        </div>
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Image)
            @Html.TextBoxFor(m => m.RecipeDetails.Image, new { @class = "form-control", type = "file" })
        </div>
        <div class="col-md-12">
            @Html.LabelFor(m => m.RecipeDetails.Description, new { @class = "form-label" })
            @Html.TextAreaFor(m => m.RecipeDetails.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Description, "", htmlAttributes: new
            {
                @class =
                    "text-danger"
            })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.PrepMins, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.PrepMins, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.PrepMins, "", htmlAttributes: new
            {
                @class = "text-danger"
            })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.CookMins, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.CookMins, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.CookMins, "", htmlAttributes: new
            {
                @class = "text-danger"
            })

        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.Servings, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Servings, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Servings, "", htmlAttributes: new
            {
                @class = "text-danger"
            })

        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RecipeDetails.Tags, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.RecipeDetails.Tags, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RecipeDetails.Tags, "", htmlAttributes: new { @class = "text-danger" })
        </div>
    </div>
    <div class="row pb-4">
        <hr/>
        <h3 class="h3">@Html.DisplayNameFor(m => m.Ingredients)</h3>
        <hr/>
        <table>
            <tbody id="ingredientsBody">
            @{
                for (var i = 0; i < Model.Ingredients.Count;)
                {
                    <tr>
                        <td>
                            @Html.ValueFor(r => r.Ingredients[i].Detail)
                        </td>
                    </tr>
                }
            }
            </tbody>
            <tfoot>
            <tr>
                <td>
                    <input id="addIngredient"/>
                </td>
                <td>
                    <input type="button" id="btnAddIngredient" value="Add ingredient"/>
                </td>
            </tr>
            </tfoot>
        </table>
        @Html.ValidationMessageFor(m => m.Ingredients, "", htmlAttributes: new { @class = "text-danger" })
    </div>
    <div class="row">
        <hr/>
        <h3 class="h3">@Html.DisplayNameFor(m => m.Instructions)</h3>
        <hr/>
        <table>
            <tbody id="instructionsBody">
            @{
                for (var i = 0; i < Model.Instructions.Count;)
                {
                    <tr>
                        <td>
                            @Html.ValueFor(r => r.Instructions[i].Text)
                        </td>
                    </tr>
                }
            }
            </tbody>
            <tfoot>
            <tr>
                <td>
                    <input id="addInstruction"/>
                </td>
                <td>
                    <input type="button" id="btnAddInstruction" value="Add Instruction"/>
                </td>
            </tr>
            </tfoot>
        </table>
        @Html.ValidationMessageFor(m => m.Instructions, "", htmlAttributes: new { @class = "text-danger" })
    </div>
</form>

@section Scripts {
    <script>
        $('#btnAddIngredient').click(function () {
            let rowCount = $('#ingredientsBody tr').length;
            let ingredient = $('#addIngredient').val();

            let newRowHtml =
                '<tr><td>' +
                '<input name="Ingredients[' + rowCount + '].Detail" value="' + ingredient + '"/>' +
                '</td></tr>'
            $('#ingredientsBody').append(newRowHtml);
        });

        $('#btnAddInstruction').click(function () {
            let rowCount = $('#instructionsBody tr').length;
            let instruction = $('#addInstruction').val();

            let newRowHtml =
                '<tr><td>' +
                '<input name="Instructions[' + rowCount + '].Text" value="' + instruction + '"/>' +
                '</td></tr>'
            $('#instructionsBody').append(newRowHtml);
        });
    </script>
}